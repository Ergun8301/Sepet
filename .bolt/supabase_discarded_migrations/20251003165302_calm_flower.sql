-- A) Set Customer location for current user
create or replace function public.set_client_location(lat double precision, lon double precision)
returns void
language sql
security definer
as $$
  update public.clients
     set location = ST_SetSRID(ST_MakePoint(lon, lat), 4326)
   where id = auth.uid();
$$;
grant execute on function public.set_client_location(double precision,double precision) to anon, authenticated;

-- B) Set Merchant location for current user
create or replace function public.set_merchant_location(lat double precision, lon double precision)
returns void
language sql
security definer
as $$
  update public.merchants
     set location = ST_SetSRID(ST_MakePoint(lon, lat), 4326)
   where id = auth.uid();
$$;
grant execute on function public.set_merchant_location(double precision,double precision) to anon, authenticated;

-- C) Create Offer owned by current merchant (discount_percent is generated by DB; do not provide it)
create or replace function public.create_offer(
  title text,
  description text,
  price_before numeric,
  price_after numeric,
  available_from timestamptz,
  available_until timestamptz,
  lat double precision,
  lon double precision
) returns public.offers
language sql
security definer
as $$
  insert into public.offers
    (merchant_id, title, description, price_before, price_after, available_from, available_until, is_active, location, created_at)
  values
    (auth.uid(), title, description, price_before, price_after, available_from, available_until, true, ST_SetSRID(ST_MakePoint(lon, lat), 4326), now())
  returning *;
$$;
grant execute on function public.create_offer(text,text,numeric,numeric,timestamptz,timestamptz,double precision,double precision) to anon, authenticated;

-- D) Nearby offers (returns fields + computed distance in meters)
create or replace function public.nearby_offers(
  lat double precision,
  lon double precision,
  radius_km double precision default 3
) returns table(
  id uuid,
  merchant_id uuid,
  title text,
  description text,
  image_url text,
  price_before numeric,
  price_after numeric,
  available_from timestamptz,
  available_until timestamptz,
  is_active boolean,
  distance_m integer
)
language sql
stable
security definer
as $$
  select
    o.id, o.merchant_id, o.title, o.description, o.image_url,
    o.price_before, o.price_after, o.available_from, o.available_until, o.is_active,
    round(ST_Distance(o.location, ST_SetSRID(ST_MakePoint(lon, lat), 4326)::geography))::int as distance_m
  from public.offers o
  where o.is_active = true
    and o.available_until >= now()
    and o.location is not null
    and ST_DWithin(
          o.location,
          ST_SetSRID(ST_MakePoint(lon, lat), 4326)::geography,
          radius_km * 1000
        )
  order by distance_m asc, o.available_until asc;
$$;
grant execute on function public.nearby_offers(double precision,double precision,double precision) to anon, authenticated;